// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	domain "github.com/babon21/ad-storage-service/internal/ad/storage/domain"
	mock "github.com/stretchr/testify/mock"

	service "github.com/babon21/ad-storage-service/internal/ad/storage/service"
)

// AdService is an autogenerated mocks type for the AdService type
type AdService struct {
	mock.Mock
}

// CreateAd provides a mocks function with given fields: ad
func (_m *AdService) CreateAd(ad *domain.Ad) (string, error) {
	ret := _m.Called(ad)

	var r0 string
	if rf, ok := ret.Get(0).(func(*domain.Ad) string); ok {
		r0 = rf(ad)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*domain.Ad) error); ok {
		r1 = rf(ad)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAd provides a mocks function with given fields: adId, optionalFields
func (_m *AdService) GetAd(adId string, optionalFields []string) (domain.Ad, error) {
	ret := _m.Called(adId, optionalFields)

	var r0 domain.Ad
	if rf, ok := ret.Get(0).(func(string, []string) domain.Ad); ok {
		r0 = rf(adId, optionalFields)
	} else {
		r0 = ret.Get(0).(domain.Ad)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, []string) error); ok {
		r1 = rf(adId, optionalFields)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAdList provides a mocks function with given fields: page, sortField, sortOrder
func (_m *AdService) GetAdList(page int, sortField service.SortField, sortOrder service.SortOrder) ([]domain.Ad, error) {
	ret := _m.Called(page, sortField, sortOrder)

	var r0 []domain.Ad
	if rf, ok := ret.Get(0).(func(int, service.SortField, service.SortOrder) []domain.Ad); ok {
		r0 = rf(page, sortField, sortOrder)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.Ad)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int, service.SortField, service.SortOrder) error); ok {
		r1 = rf(page, sortField, sortOrder)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
